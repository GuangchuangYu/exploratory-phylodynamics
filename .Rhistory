packwidget(10*c(1,2,3,4),c(1,1,2,2))
install.packages("RStan")
install.packages("rstan")
require(coda)
require(rjags)
n <- 100
numint <- n-1
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
nidx
result <- matrix(0,nrow=numint,ncol=n)
?sample
numint <- n-1
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=numint,ncol=n)
result[1,] <- nidx
i=2
ij <- sample(x=idx,size=2,replace=FALSE,prob=nidx)
idx
prob
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
a1
idx[a1]
nidx[a1]
n <- 100
numint <- n-1
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=numint,ncol=n)
result[1,] <- nidx
for(i in 2:numint){
print(i)
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a1] <- nidx[a1]-1
a2 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a2] <- nidx[a2]-1
nidx[a1+a2] <- nidx[a1+a2]+1
result[i,] <- nidx
}
result
result[99,]
rowSums(result)
apply(result,2,max)
apply(result,1,max)
image(result)
n <- 100
numint <- n-1
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=numint,ncol=n)
result[1,] <- nidx
for(i in 2:numint){
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a1] <- nidx[a1]-1
a2 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a2] <- nidx[a2]-1
nidx[a1+a2] <- nidx[a1+a2]+1
result[i,] <- nidx
print(paste(i,a1,a2,a1+a2))
}
n <- 100
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=numint,ncol=n)
result[1,] <- nidx
for(i in 2:n){
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a1] <- nidx[a1]-1
a2 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a2] <- nidx[a2]-1
nidx[a1+a2] <- nidx[a1+a2]+1
result[i,] <- nidx
print(paste(i,a1,a2,a1+a2))
}
n <- 100
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=numint,ncol=n)
result[1,] <- nidx
for(i in 2:(n-1)){
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a1] <- nidx[a1]-1
a2 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a2] <- nidx[a2]-1
nidx[a1+a2] <- nidx[a1+a2]+1
result[i,] <- nidx
}
result
rowSums(result)
result[99,]
n <- 100
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=numint,ncol=n)
result[1,] <- nidx
for(i in 2:(n-1)){
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a1] <- nidx[a1]-1
a2 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a2] <- nidx[a2]-1
nidx[a1+a2] <- nidx[a1+a2]+1
result[i,] <- nidx
}
result[1,]
result[2,]
result[3,]
result[4,]
result[5,]
result[10,]
result[11,]
propclustered <- function(r){
m <- r[,2:dim(r)[2]]
m/rowSums(r)
}
propclustered(result)
propclustered <- function(r){
rs <- rowSums(r)
(rs-rs[,1])/rs
}
propclustered <- function(r){
rs <- rowSums(r)
(rs-r[,1])/rs
}
propclustered(result)
plot(propclustered(result))
samplecluster <- function(n){
idx <- seq(1,n)
nidx <- c(n,rep(0,n-1))
result <- matrix(0,nrow=n,ncol=n)
result[1,] <- nidx
for(i in 2:(n-1)){
a1 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a1] <- nidx[a1]-1
a2 <- sample(x=idx,size=1,replace=FALSE,prob=nidx)
nidx[a2] <- nidx[a2]-1
nidx[a1+a2] <- nidx[a1+a2]+1
result[i,] <- nidx
}
result[n,n] <- n
result
}
propclustered <- function(r){
rs <- rowSums(r)
(rs-r[,1])/rs
}
```
?replicate
nreps <- 100
n <- 100
clustersims <- replicate(nreps,samplecluster(n),simplify="list")
pc <- lapply(clustersims,propclustered)
clustersims[[1]]
samplecluster(100)
clustersims <- list()
for(i in 1:nreps) clustersims[[i]] <- samplecluster(n)
pc <- lapply(clustersims,propclustered)
pc[[1]]
pc[[1]]
2
pc[[2]]
maxcluster <- function(r){
nr <- dim(r)[1]
nc <- dim(r)[2]
idx <- seq(1,nc)
mc <- rep(0,nr)
for(i in 1:nr){
mc[i] <- max(idx[r[i,]>0])
}
mc
}
mc <- lapply(clustersims,maxcluster)
mc
pc
as.data.frame.list(pc)
plotlist <- function(l,...){
np <- length(l)
maxpt <- lapply(l,max)
numint <- length(l[[1]])
plot(l[[1]]~seq(1,numint),type="n",ylim=c(0,maxpt),...)
for(i in 1:np){
lines(l[[i]]~seq(1,n),type="b",alpha=0.5,col="blue")
}
}
plotlist(pc)
```
plotlist <- function(l,...){
np <- length(l)
maxpt <- max(unlist(lapply(l,max)))
numint <- length(l[[1]])
plot(l[[1]]~seq(1,numint),type="n",ylim=c(0,maxpt),...)
for(i in 1:np){
lines(l[[i]]~seq(1,n),type="b",alpha=0.5,col="blue")
}
}
plotlist(pc)
warnings()
plotlist <- function(l,...){
np <- length(l)
maxpt <- max(unlist(lapply(l,max)))
numint <- length(l[[1]])
plot(l[[1]]~seq(1,numint),type="n",ylim=c(0,maxpt),...)
for(i in 1:np){
lines(l[[i]]~seq(1,n),type="s",col="blue")
}
}
plotlist(pc)
plotlist <- function(l,...){
np <- length(l)
maxpt <- max(unlist(lapply(l,max)))
numint <- length(l[[1]])
plot(l[[1]]~seq(1,numint),type="n",ylim=c(0,maxpt),...)
for(i in 1:np){
lines(l[[i]]~seq(1,n),type="p",col="blue")
}
}
plotlist(pc)
plotlist(mc)
plotlist(pc,xlab="Coalescent interval",ylab="Proportion clusteredddddd")
plotlist <- function(l,...){
np <- length(l)
maxpt <- max(unlist(lapply(l,max)))
numint <- length(l[[1]])
plot(l[[1]]~seq(1,numint),type="n",ylim=c(0,maxpt),...)
for(i in 1:np){
lines(l[[i]]~seq(1,n),type="p",col="blue",pch=16,cex=0.5)
}
}
plotlist(pc,xlab="Coalescent interval",ylab="Proportion clustered")
plotlist(mc,xlab="Coalescent interval",ylab="Maximum cluster size")
plotlist(pc,xlab="Coalescent interval",ylab="Proportion clustered")
source('~/.active-rstudio-document', echo=TRUE)
tr.dist <- as.matrix(cophenetic.phylo(tr))
mindist <- rep(1.0,length(tr$tip.label))
for(i in 1:length(tr$tip.label)){
dst <- min(tr.dist[i,-i])
mindist[i] <- dst
}
hist(mindist)
t0 <- 2000#max(times(beijing))
t1 <- 2014
x0 <- init(beijing)
N <- 1000
sampleNames <- paste("S",seq(1,N),sep="")
#sampleTimes <- rep(max(times(beijing)),N)
sampleTimes <- rep(t1,N)
names(sampleTimes) <- sampleNames
sampleStates <- matrix(0,nrow=N,ncol=dim(births)[1]) # All nontesters > 350 CD4+
sampleStates[,1] <- 1
dimnames(sampleStates) <- list(sampleNames,row.names(births))
# check trajectory
traj <- make.fgy(0,14,births,deaths,nonDemeDynamics,x0,migrations,as.list(beijing.parms),fgyResolution=1000,integrationMethod="rk4")
plot(unlist((lapply(traj[[4]],"[",1)))~traj[[1]],type="l",lty=2,col="blue")
points(out(beijing)$IN1~out(beijing)$time,col="red",cex=0.5)
# Not quite right
tr <- simulate.binary.dated.tree(births,deaths,nonDemeDynamics,t0,x0,sampleTimes,sampleStates,migrations,parms=as.list(beijing.parms),fgyResolution=8000,integrationMethod='adams')
plot(tr,show.tip.label=FALSE)
hist(mindist,breaks=100)
hist(mindist,breaks=20)
library(adephylo)
dr=distRoot(tr)
tr
as.phylo(tr)
tr2 <- tr
class(tr2) <- "phylo"
dr=distRoot(tr2)
dr
summary(dr)
source('~/.active-rstudio-document', echo=TRUE)
?simulate.binary.dated.tree
t0
tr <- simulate.binary.dated.tree(births,deaths,nonDemeDynamics,1990,x0,sampleTimes,sampleStates,migrations,parms=as.list(beijing.parms),fgyResolution=8000,integrationMethod='adams')
traj <- make.fgy(0,14,births,deaths,nonDemeDynamics,x0,migrations,as.list(beijing.parms),fgyResolution=4000,integrationMethod="adams")
plot(unlist((lapply(traj[[4]],"[",1)))~traj[[1]],type="l",lty=2,col="blue")
points(out(beijing)$IN1~out(beijing)$time,col="red",cex=0.5)
traj
x0
row.names(births)
names(traj)
traj[[1]]
traj[[2]]
library(simecol)
sir.rh.ode <- new("odeModel",
main = function(time, init, parms, ...){
with(as.list(c(init,parms)),{
dtheta <- -theta*M*beta
dM <- -gamma*M+beta*M*((theta^2)*dpsi2(theta,k)+theta*dpsi(theta,k))*(1/dpsi(1,k))
S <- psi(theta,k)
I <- 1-S-R
dR <- gamma*I
list(c(dtheta,dM,dR))
})},
equations = list(),
parms = c(beta=0.1,gamma=0.05,k=5),
times = c(from=0,to=125,by=0.01),
init = c(theta=0.999,M=0.001,R=0),
solver = "lsoda"
)
poisgn <- list(
psi = function(theta,k){theta^k},
dpsi = function(theta,k){k*theta^(k-1)},
dpsi2 = function(theta,k){k*(k-1)*theta^(k-2)}
)
equations(sir.rh.ode) <- poisgn
sir.rh.ode <- sim(sir.rh.ode)
sir.rh.out <- out(sir.rh.ode)
sir.rh.out$S <- poisgn[["psi"]](sir.rh.out$theta,5)
sir.rh.out$I <- 1-sir.rh.out$S-sir.rh.out$R
par(las=1,font.lab=2)
plot(S~time,data=sir.rh.out,type="l",lty=2,ylim=c(0,1),xlab="Time",ylab="Proportion")
lines(I~time,data=sir.rh.out,type="l",lty=1)
lines(R~time,data=sir.rh.out,type="l",lty=3)
plot(dpois(seq(0,10),5,log=FALSE)/I(dpois(seq(0,10),5)*(1-sir.rh.out[1001,]$theta^seq(0,10)))~seq(0,10),type="h")
plot(dpois(seq(0,10),5,log=FALSE)/I(dpois(seq(0,10),5)*(1-sir.rh.out[2001,]$theta^seq(0,10)))~seq(0,10),type="h")
plot(dpois(seq(0,10),5,log=FALSE)/I(dpois(seq(0,10),5)*(1-sir.rh.out[3001,]$theta^seq(0,10)))~seq(0,10),type="h")
plot(1-theta^2~time,data=sir.rh.out,ylim=c(0,1))
lines(1-theta^10~time,data=sir.rh.out,lty=2)
par(las=1,font.lab=2)
plot(S~time,data=sir.rh.out,type="l",lty=2,ylim=c(0,1),xlab="Time",ylab="Proportion")
lines(I~time,data=sir.rh.out,type="l",lty=1)
lines(R~time,data=sir.rh.out,type="l",lty=3)
plot(1-theta^2~time,data=sir.rh.out,ylim=c(0,1))
plot(1-theta^2~time,data=sir.rh.out,ylim=c(0,1),type="l",col="blue")
lines(1-theta^10~time,data=sir.rh.out,lty=1,col="red")
legend(0,0.9,lwd=1,col=c("blue","red"))
plot(1-theta^2~time,data=sir.rh.out,ylim=c(0,1),type="l",col="blue",xlab="Time",ylab="Proportion of degre class")
lines(1-theta^10~time,data=sir.rh.out,lty=1,col="red")
legend(0,0.9,lwd=1,col=c("blue","red"))
legend(0,0.9,lwd=1,col=c("blue","red"),legend=c("k=2","k=10"))
legend(100,0.1,lwd=1,col=c("blue","red"),legend=c("k=2","k=10"))
plot(1-theta^2~time,data=sir.rh.out,ylim=c(0,1),type="l",col="blue",xlab="Time",ylab="Proportion of degre class")
lines(1-theta^10~time,data=sir.rh.out,lty=1,col="red")
legend(100,0.2,lwd=1,col=c("blue","red"),legend=c("k=2","k=10"))
plot(dpois(seq(0,10),5,log=FALSE)/I(dpois(seq(0,10),5)*(1-sir.rh.out[1001,]$theta^seq(0,10)))~seq(0,10),type="h")
barplot(dpois(seq(0,10),5,log=FALSE)/I(dpois(seq(0,10),5)*(1-sir.rh.out[1001,]$theta^seq(0,10)))~seq(0,10),type="h")
barplot(height=dpois(seq(1,10),5,log=FALSE)/I(dpois(seq(1,10),5)*(1-sir.rh.out[1001,]$theta^seq(0,10)))~seq(1,10),type="h")
barplot(height=dpois(seq(1,10),5,log=FALSE)/I(dpois(seq(1,10),5)*(1-sir.rh.out[1001,]$theta^seq(0,10))),type="h")
barplot(height=dpois(seq(1,10),5,log=FALSE)/I(dpois(seq(1,10),5)*(1-sir.rh.out[1001,]$theta^seq(1,10))),type="h")
dpois(seq(1,10),5,log=FALSE)/I(dpois(seq(1,10),5)*(1-sir.rh.out[1001,]$theta^seq(1,10)))
h1 <- dpois(seq(1,10),5,log=FALSE)/I(dpois(seq(1,10),5)*(1-sir.rh.out[1001,]$theta^seq(1,10)))
barplot(h1)
h1
barplot(as.vector(h1))
barplot(as.vector(h1)~seq(1,10))
barplot(height=as.vector(h1),seq(1,10))
?barplot
barplot(height=as.vector(h1),names.arg=seq(1,10))
sum(h1)
barplot(height=as.vector(h1),names.arg=seq(1,10),xlab="k",ylab="Density")
h1[1]*1/(seq(1,10))
p1 <- h1[1]*1/(seq(1,10))
points(p1~seq(1,10))
plot(as.vector(h1)~seq(1,10),xlab="k",ylab="Density",type=h,lwd=3)
plot(as.vector(h1)~seq(1,10),xlab="k",ylab="Density",type="h",lwd=3)
plot(as.vector(h1)~seq(1,10),xlab="k",ylab="Density",type="h",lwd=3,xlim=seq(1,10))
plot(as.vector(h1)~seq(1,10),xlab="k",ylab="Density",type="h",lwd=3,xlim=c(0,10))
plot(as.vector(h1)~seq(1,10),xlab="k",ylab="Density",type="h",lwd=3,xlim=c(1,10))
points(p1~seq(1,10),col="red",pch=1)
plot(dpois(seq(0,10),5,log=FALSE)/I(dpois(seq(0,10),5)*(1-sir.rh.out[2001,]$theta^seq(0,10)))~seq(0,10),type="h")
h1 <- dpois(seq(1,10),5,log=FALSE)/I(dpois(seq(1,10),5)*(1-sir.rh.out[1001,]$theta^seq(1,10)))
p1 <- h1[1]*1/(seq(1,10))
plot(as.vector(h1)~seq(1,10),xlab="k",ylab="Relative frequency",type="h",lwd=3,xlim=c(1,10))
library(ape)
setwd("~/Projects/exploratory-phylodynamics")
lasv.chronos <- read.tree("LASV_chronos.tre")
lasv.chronos <- read.tree("LASV_chronos.nwk")
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
library(magrittr)
library(adephylo)
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
lasv.rd <- distRoot(lasv.chronos)
library(pander)
max(lasv.tipdates)-max(lasv.rd)
max(lasv.rd)
?chronos
source('~/Projects/exploratory-phylodynamics/chronos.R', echo=TRUE)
source('~/Projects/exploratory-phylodynamics/chronos.R', echo=TRUE)
results[[bestmodel]]
attr(results[[bestmodel]],"rate")
attr(results[[2]],"rate")
names(results[[1]])
attr(results[[2]],"rates")
attr(results[[2]],"frequencies")
attr(results[[1]],"frequencies")
plot(lasv.chronos)
lasv.chronos <- read.tree("LASV_chronos.nwk")
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
lasv.rd <- distRoot(lasv.chronos)
max(lasv.tipdates)-max(lasv.rd)
lasv.rd
max(lasv.rd)
max(lasv.tipdates)-max(lasv.rd)
library(OutbreakTools)
install.packages("OutbreakTools")
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
library(magrittr)
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip.dates=lasv.tipdates,branch.unit="year")
library(OutbreakTools)
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip.dates=lasv.tipdates,branch.unit="year")
plot(lasv.ggphy)
plotggphy(lasv.ggphy)
x <- new("obkData",trees=lasv.ggphy)
plotggphy
x <- new("obkData",trees=lasv.chronos)
x <- new("obkData",trees=list(lasv.chronos))
x <- new("obkData",trees=list(lasv.chronos))
x <- new("obkData",trees=c(lasv.chronos))
?plotggphy
plotggphy(x,ladderize=TRUE,tip.dates=lasv.tipdates,branch.unit="year")
plotggphy(x,ladderize=TRUE,branch.unit="year")
x <- new("obkData",dna.date=lasv.tipdates,trees=c(lasv.chronos))
plotggphy(x,ladderize=TRUE,branch.unit="year")
x
phylo2ggphy(lasv.chronos,tip.dates=lasv.tipdates,branch.unit="year")
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip.dates=lasv.tipdates,branch.unit="year")
ggplot(lasv.ggphy)
ggphy
?file
phylo2ggphy
?plotggphy
plotggphy
source('~/Projects/exploratory-phylodynamics/plot_ggphy_tree.R', echo=TRUE)
library(ggplot2)
source("plot_ggphy_tree.R")
plot_ggphy_tree(lasv.ggphy)
source("plot_ggphy_tree.R")
source("plot_ggphy_tree.R")
plot_ggphy_tree(lasv.ggphy)
plot_ggphy_tree(lasv.ggphy,branch.unit="year")
plot_ggphy_tree <- function(ggphy,tip.attribute=NULL,branch.unit=NULL){
source("plot_ggphy_tree.R")
)
source("plot_ggphy_tree.R")
source("plot_ggphy_tree.R")
plot_ggphy_tree(lasv.ggphy,branch.unit="year")
source("plot_ggphy_tree.R")
plot_ggphy_tree(lasv.ggphy,branch.unit="year",show.tip.label=FALSE)
source("plot_ggphy_tree.R")
plot_ggphy_tree(lasv.ggphy,branch.unit="year",show.tip.label=FALSE)
source("phylo2ggphy.R")
source("plotggphy.R")
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip.dates=lasv.tipdates,branch.unit="year")
?phylo2ggphy
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip_dates=lasv.tipdates,branch_unit="year")
plotggphy(lasv.ggphy)
plot_ggphy(lasv.ggphy)
source("plot_ggphy.R")
plot_ggphy(lasv.ggphy)
lasv.tipdates
lasv.tipdates <- as.Date(paste(lasv.tipdates,"-01-01",sep=""))
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip_dates=lasv.tipdates,branch_unit="year")
plot_ggphy(lasv.ggphy)
lasv.tipdates
?date_format
library(scales)
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip_dates=lasv.tipdates,branch_unit="year")
plot_ggphy(lasv.ggphy)
lasv.chronos$tip.label
sort(lasv.chronos$tip.label)
lasv.host <- rep("Human",length(lasv.chronos$tip.label))
lasv.host <- rep("Human",length(lasv.chronos$tip.label))
lasv.host[grep("Josiah",lasv.chronos$tip.label)] <- "Lab"
lasv.host[grep("LM",lasv.chronos$tip.label)] <- "Mastomys"
lasv.host[grep("ZO",lasv.chronos$tip.label)] <- "Mastomys"
table(lasv.host)
lasv.annotations <- data.frame(Taxa=lasv.chronos$tip.label,Host=lasv.host)
plot_ggphy(lasv.ggphy,tip_labels=F,tip_attribute=lasv.annotations,var_tip_labels="taxa",var_tip_colour="Host"))
plot_ggphy(lasv.ggphy,tip_labels=F,tip_attribute=lasv.annotations,var_tip_labels="taxa",var_tip_colour="Host")
lasv.annotations <- data.frame(taxa=lasv.chronos$tip.label,Host=lasv.host)
plot_ggphy(lasv.ggphy,tip_labels=F,tip_attribute=lasv.annotations,var_tip_labels="taxa",var_tip_colour="Host")
lasv.chronos <- read.tree("LASV_chronos.nwk")
lasv.chronos <- ladderize(lasv.chronos)
lasv.host <- rep("Human",length(lasv.chronos$tip.label))
lasv.host[grep("Josiah",lasv.chronos$tip.label)] <- "Lab"
lasv.host[grep("ZO",lasv.chronos$tip.label)] <- "Mastomys"
lasv.host[grep("LM",lasv.chronos$tip.label)] <- "Mastomys"
lasv.annotations <- data.frame(taxa=lasv.chronos$tip.label,Host=lasv.host)
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
lasv.tipdates <- as.Date(paste(lasv.tipdates,"-01-01",sep=""))
lasv.ggphy <- phylo2ggphy(lasv.chronos,tip_dates=lasv.tipdates,branch_unit="year")
plot_ggphy(lasv.ggphy,tip_labels=F,tip_attribute=lasv.annotations,var_tip_labels="taxa",var_tip_colour="Host")
library(ape)
library(INLA)
library(magrittr)
library(ggplot2)
source("skyride.R")
lasv.chronos <- read.tree("LASV_chronos.nwk")
lasv.sr <- calculate.heterochronous.skyride(lasv.chronos)
lasv.sr
ggplot(data=results,aes(x=time))+geom_line(aes(y=sr.median))+facet_wrap(~Scenario)+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10()+scale_x_reverse()+theme(strip.text.x=element_text(size = rel(0.6)))
class(lasv.sr)
ggplot(data=lasv.sr,aes(x=time))+geom_line(aes(y=sr.median))+facet_wrap(~Scenario)+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10()+scale_x_reverse()+theme(strip.text.x=element_text(size = rel(0.6)))
ggplot(data=lasv.sr,aes(x=time))+geom_line(aes(y=sr.median))+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10()+scale_x_reverse()+theme(strip.text.x=element_text(size = rel(0.6)))
lasv.sr$year <- max(lasv.tipdates)-lasv.sr$time
ggplot(data=lasv.sr,aes(x=year))+geom_line(aes(y=sr.median))+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10()+scale_x_reverse()+theme(strip.text.x=element_text(size = rel(0.6)))
lasv.sr
lasv.tipdates
lasv.tipdates <- strsplit(lasv.chronos$tip.label,"-",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
lasv.tipdates
lasv.sr$year <- max(lasv.tipdates)-lasv.sr$time
ggplot(data=lasv.sr,aes(x=year))+geom_line(aes(y=sr.median))+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10()+scale_x_reverse()+theme(strip.text.x=element_text(size = rel(0.6)))
ggplot(data=lasv.sr,aes(x=year))+geom_line(aes(y=sr.median))+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10()+theme(strip.text.x=element_text(size = rel(0.6)))
ggplot(data=lasv.sr,aes(x=year))+geom_line(aes(y=sr.median))+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10(limits=c(1,1000))+theme(strip.text.x=element_text(size = rel(0.6)))
ggplot(data=lasv.sr,aes(x=year))+geom_line(aes(y=sr.median))+ylab(expression(N[e]))+xlab("Time since present")+scale_y_log10(limits=c(10,1000))+theme(strip.text.x=element_text(size = rel(0.6)))
?rtt
library(treeAsymmetry)
library(treeImbalance)
devtools::install_git("http://github.com/bdearlove/treeImbalance.git")
library(ape)
library(treeImbalance)
library(phylobase)
